------------------------------------------------------------------------------
--! @authors: Jason Hunter, Kayvia Harriott, Tashna-Gail Williams
--! Created on: 2021-11-02
--! @version: 0.4.2
--! Last Updated: 2021-11-10 21:23:55
------------------------------------------------------------------------------

-- PLEASE DON'T EDIT THIS FILE DIRECTLY, COPY AND PASTE IT AND WORK ON THAT
-- WHEN TESTING. DON'T COMMIT YOUR CUSTOM TEST FILE DIRECTLY EITHER. IF YOU
-- CREATED ANE NEW OBJECTS THAT COULD BE USEFUL FOR TESTING YOU MAY ADD THE
-- CHANGES HERE BUT OTHERWISE THIS IS JUST A BASE FILE TO MAKE YOUR PERSONAL
-- TESTS FROM

reset

!new Leaderboard('lboard')
!insert (lboard,lboard) into OnlyLboard

!new Dictionary('dict')
!insert (dict,dict) into OnlyDict

!new Word('word')
!l := create Letter()
!l.letter := 'w'
!insert (word, l) into Spelling
!l := create Letter()
!l.letter := 'o'
!insert (word, l) into Spelling
!l := create Letter()
!l.letter := 'r'
!insert (word, l) into Spelling
!l := create Letter()
!l.letter := 'd'
!insert (word, l) into Spelling

!new Word('do')
!l := create Letter()
!l.letter := 'd'
!insert (do, l) into Spelling
!l := create Letter()
!l.letter := 'o'
!insert (do, l) into Spelling

!new Word('door')
!l := create Letter()
!l.letter := 'd'
!insert (door, l) into Spelling
!l := create Letter()
!l.letter := 'o'
!insert (door, l) into Spelling
!l := create Letter()
!l.letter := 'o'
!insert (door, l) into Spelling
!l := create Letter()
!l.letter := 'r'
!insert (door, l) into Spelling

!new Word('deer')
!l := create Letter()
!l.letter := 'd'
!insert (deer, l) into Spelling
!l := create Letter()
!l.letter := 'e'
!insert (deer, l) into Spelling
!l := create Letter()
!l.letter := 'e'
!insert (deer, l) into Spelling
!l := create Letter()
!l.letter := 'r'
!insert (deer, l) into Spelling

!new DateTime('rightNow')
!rightNow.initialise(2021, 10, 22, 12, 59, 59)

!new Player('player1')
!player1.id := 'player1'
!player1.username := 'TestUser1'
!player1.email := 'test1@email.com'
!player1.status := #PLAYING
!player1.state := #PRIVATE
!player1.score := 500

!new Rank('rank1') between (lboard,player1)
!rank1.placement := 1

!new Player('player2')
!player2.id := 'player2'
!player2.username := 'TestUser2'
!player2.email := 'test2@email.com'
!player2.status := #PLAYING
!player2.state := #PRIVATE
!player2.score := 450

!new Rank('rank2') between (lboard,player2)
!rank2.placement := 2

--------Friend Request between Players 1 and 2

!new DateTime('frReq1SentDate')
!insert (frReq1SentDate, rightNow) into CurrentDate
!frReq1SentDate.initialise(2021, 10, 20, 18, 05, 13)

!new DateTime('frReq1AddrDate')
!insert (frReq1AddrDate, rightNow) into CurrentDate
!frReq1AddrDate.initialise(2021, 10, 21, 6, 05, 21)

!new Period('frReq1Period')
!frReq1Period.addStart(frReq1AddrDate)

!new Request('frReq1P1P2')
!frReq1P1P2.id := 'frReq1'
!frReq1P1P2.type := #FRIEND
!frReq1P1P2.status := #ACCEPTED
!frReq1P1P2.sentDate := frReq1SentDate
!frReq1P1P2.activePeriod := frReq1Period
!insert (player1,frReq1P1P2) into SentRequest
!insert (player2,frReq1P1P2) into RecievedRequest

--------Chat between Players 1 and 2

!new Chat('chatp1p2')
!new ChatState('chat1p1') between (chatp1p2,player1)
!new ChatState('chat1p2') between (chatp1p2,player2)

!new DateTime('msg1Date')
!insert (msg1Date, rightNow) into CurrentDate
!msg1Date.initialise(2021, 10, 22, 12, 35, 06)

!new Message('msg1p1p2')
!msg1p1p2.id := 'msg1'
!msg1p1p2.message := 'This is a test'
!msg1p1p2.sentDate := msg1Date
!msg1p1p2.status := #SEEN
!insert (chatp1p2,msg1p1p2) into PlayerChat
!insert (player1,msg1p1p2) into RecievedMessage
!insert (player2,msg1p1p2) into SentMessage

!chat1p1.lastOpened := msg1Date

!new DateTime('msg2Date')
!insert (msg2Date, rightNow) into CurrentDate
!msg2Date.initialise(2021, 10, 22, 12, 35, 45)

!new Message('msg2p1p2')
!msg2p1p2.id := 'msg2'
!msg2p1p2.message := 'tset a si sihT'
!msg2p1p2.sentDate := msg2Date
!msg1p1p2.status := #SEEN
!insert (chatp1p2,msg2p1p2) into PlayerChat
!insert (player2,msg2p1p2) into RecievedMessage
!insert (player1,msg2p1p2) into SentMessage

!chat1p2.lastOpened := msg2Date

--------Match Request between Players 1 and 2

!new DateTime('matchReq1SentDate')
!insert (matchReq1SentDate, rightNow) into CurrentDate
!matchReq1SentDate.initialise(2021, 10, 22, 12, 36, 12)

!new DateTime('matchReq1AddrDate')
!insert (matchReq1AddrDate, rightNow) into CurrentDate
!matchReq1AddrDate.initialise(2021, 10, 22, 12, 37, 21)

!new Period('matchReq1Period')
!matchReq1Period.addStart(matchReq1AddrDate)

!new MatchRequest('matchReq1')
!matchReq1.id := 'matchReq1'
!matchReq1.sentDate := matchReq1SentDate
!matchReq1.activePeriod := matchReq1Period
!matchReq1.type := #MATCH
!matchReq1.matchType := #UNRANKED
!matchReq1.timed := false
!matchReq1.status := #ACCEPTED
!insert (player1,matchReq1) into SentRequest
!insert (player2,matchReq1) into RecievedRequest

--------Match between Player 1 and 2

!new Period('match1Period')
!match1Period.addStart(matchReq1AddrDate)

!new Match('match1')
!match1.id := 'match1'
!match1.type := #UNRANKED
!match1.timed := false
!match1.duration := match1Period
!match1.category := #NONE
!match1.status := #INPROGRESS
!insert (match1, dict) into WordCheck
!insert (matchReq1,match1) into RequestMatch
!new Rack('rack1p2') between (player2,match1)
!new Rack('rack2p1') between (player1,match1)
!insert

!new Board('board1')
!insert (match1,board1) into MatchGameBoard
!new LetterBag('lbag1')
!insert (lbag1,board1) into LetterOptions

-- A Tiles
    !l := create Letter()
    !l.letter := 'a'
    !insert (door, l) into Spelling
    !t := create Tile()
    !t.letter := l
    !insert (lbag1, t) into Stock

    !l := create Letter()
    !l.letter := 'a'
    !insert (door, l) into Spelling
    !t := create Tile()
    !t.letter := l
    !insert (lbag1, t) into Stock

    !l := create Letter()
    !l.letter := 'a'
    !insert (door, l) into Spelling
    !t := create Tile()
    !t.letter := l
    !insert (lbag1, t) into Stock

    !l := create Letter()
    !l.letter := 'a'
    !insert (door, l) into Spelling
    !t := create Tile()
    !t.letter := l
    !insert (lbag1, t) into Stock

    !l := create Letter()
    !l.letter := 'a'
    !insert (door, l) into Spelling
    !t := create Tile()
    !t.letter := l
    !insert (lbag1, t) into Stock

    !l := create Letter()
    !l.letter := 'a'
    !insert (door, l) into Spelling
    !t := create Tile()
    !t.letter := l
    !insert (lbag1, t) into Stock

    !l := create Letter()
    !l.letter := 'a'
    !insert (door, l) into Spelling
    !t := create Tile()
    !t.letter := l
    !insert (lbag1, t) into Stock

    !l := create Letter()
    !l.letter := 'a'
    !insert (door, l) into Spelling
    !t := create Tile()
    !t.letter := l
    !insert (lbag1, t) into Stock

    !l := create Letter()
    !l.letter := 'a'
    !insert (door, l) into Spelling
    !t := create Tile()
    !t.letter := l
    !insert (lbag1, t) into Stock

-- B Tiles
    !l := create Letter()
    !l.letter := 'b'
    !insert (door, l) into Spelling
    !t := create Tile()
    !t.letter := l
    !insert (lbag1, t) into Stock

    !l := create Letter()
    !l.letter := 'b'
    !insert (door, l) into Spelling
    !t := create Tile()
    !t.letter := l
    !insert (lbag1, t) into Stock

-- C Tiles
    !l := create Letter()
    !l.letter := 'c'
    !insert (door, l) into Spelling
    !t := create Tile()
    !t.letter := l
    !insert (lbag1, t) into Stock

    !l := create Letter()
    !l.letter := 'c'
    !insert (door, l) into Spelling
    !t := create Tile()
    !t.letter := l
    !insert (lbag1, t) into Stock

-- D Tiles
    !l := create Letter()
    !l.letter := 'd'
    !insert (door, l) into Spelling
    !t := create Tile()
    !t.letter := l
    !insert (lbag1, t) into Stock

    !l := create Letter()
    !l.letter := 'd'
    !insert (door, l) into Spelling
    !t := create Tile()
    !t.letter := l
    !insert (lbag1, t) into Stock

    !l := create Letter()
    !l.letter := 'd'
    !insert (door, l) into Spelling
    !t := create Tile()
    !t.letter := l
    !insert (lbag1, t) into Stock

    !l := create Letter()
    !l.letter := 'd'
    !insert (door, l) into Spelling
    !t := create Tile()
    !t.letter := l
    !insert (lbag1, t) into Stock

-- E Tiles
    !l := create Letter()
    !l.letter := 'e'
    !insert (door, l) into Spelling
    !t := create Tile()
    !t.letter := l
    !insert (lbag1, t) into Stock

    !l := create Letter()
    !l.letter := 'e'
    !insert (door, l) into Spelling
    !t := create Tile()
    !t.letter := l
    !insert (lbag1, t) into Stock

    !l := create Letter()
    !l.letter := 'e'
    !insert (door, l) into Spelling
    !t := create Tile()
    !t.letter := l
    !insert (lbag1, t) into Stock

    !l := create Letter()
    !l.letter := 'e'
    !insert (door, l) into Spelling
    !t := create Tile()
    !t.letter := l
    !insert (lbag1, t) into Stock

    !l := create Letter()
    !l.letter := 'e'
    !insert (door, l) into Spelling
    !t := create Tile()
    !t.letter := l
    !insert (lbag1, t) into Stock

    !l := create Letter()
    !l.letter := 'e'
    !insert (door, l) into Spelling
    !t := create Tile()
    !t.letter := l
    !insert (lbag1, t) into Stock

    !l := create Letter()
    !l.letter := 'e'
    !insert (door, l) into Spelling
    !t := create Tile()
    !t.letter := l
    !insert (lbag1, t) into Stock

    !l := create Letter()
    !l.letter := 'e'
    !insert (door, l) into Spelling
    !t := create Tile()
    !t.letter := l
    !insert (lbag1, t) into Stock

    !l := create Letter()
    !l.letter := 'e'
    !insert (door, l) into Spelling
    !t := create Tile()
    !t.letter := l
    !insert (lbag1, t) into Stock

    !l := create Letter()
    !l.letter := 'e'
    !insert (door, l) into Spelling
    !t := create Tile()
    !t.letter := l
    !insert (lbag1, t) into Stock

    !l := create Letter()
    !l.letter := 'e'
    !insert (door, l) into Spelling
    !t := create Tile()
    !t.letter := l
    !insert (lbag1, t) into Stock

    !l := create Letter()
    !l.letter := 'e'
    !insert (door, l) into Spelling
    !t := create Tile()
    !t.letter := l
    !insert (lbag1, t) into Stock

-- F Tiles
    !l := create Letter()
    !l.letter := 'f'
    !insert (door, l) into Spelling
    !t := create Tile()
    !t.letter := l
    !insert (lbag1, t) into Stock

    !l := create Letter()
    !l.letter := 'f'
    !insert (door, l) into Spelling
    !t := create Tile()
    !t.letter := l
    !insert (lbag1, t) into Stock

-- G Tiles
    !l := create Letter()
    !l.letter := 'g'
    !insert (door, l) into Spelling
    !t := create Tile()
    !t.letter := l
    !insert (lbag1, t) into Stock

    !l := create Letter()
    !l.letter := 'g'
    !insert (door, l) into Spelling
    !t := create Tile()
    !t.letter := l
    !insert (lbag1, t) into Stock

    !l := create Letter()
    !l.letter := 'g'
    !insert (door, l) into Spelling
    !t := create Tile()
    !t.letter := l
    !insert (lbag1, t) into Stock

-- H Tiles
    !l := create Letter()
    !l.letter := 'h'
    !insert (door, l) into Spelling
    !t := create Tile()
    !t.letter := l
    !insert (lbag1, t) into Stock

    !l := create Letter()
    !l.letter := 'h'
    !insert (door, l) into Spelling
    !t := create Tile()
    !t.letter := l
    !insert (lbag1, t) into Stock

-- I Tiles
    !l := create Letter()
    !l.letter := 'i'
    !insert (door, l) into Spelling
    !t := create Tile()
    !t.letter := l
    !insert (lbag1, t) into Stock

    !l := create Letter()
    !l.letter := 'i'
    !insert (door, l) into Spelling
    !t := create Tile()
    !t.letter := l
    !insert (lbag1, t) into Stock

    !l := create Letter()
    !l.letter := 'i'
    !insert (door, l) into Spelling
    !t := create Tile()
    !t.letter := l
    !insert (lbag1, t) into Stock

    !l := create Letter()
    !l.letter := 'i'
    !insert (door, l) into Spelling
    !t := create Tile()
    !t.letter := l
    !insert (lbag1, t) into Stock

    !l := create Letter()
    !l.letter := 'i'
    !insert (door, l) into Spelling
    !t := create Tile()
    !t.letter := l
    !insert (lbag1, t) into Stock

    !l := create Letter()
    !l.letter := 'i'
    !insert (door, l) into Spelling
    !t := create Tile()
    !t.letter := l
    !insert (lbag1, t) into Stock

    !l := create Letter()
    !l.letter := 'i'
    !insert (door, l) into Spelling
    !t := create Tile()
    !t.letter := l
    !insert (lbag1, t) into Stock

    !l := create Letter()
    !l.letter := 'i'
    !insert (door, l) into Spelling
    !t := create Tile()
    !t.letter := l
    !insert (lbag1, t) into Stock

    !l := create Letter()
    !l.letter := 'i'
    !insert (door, l) into Spelling
    !t := create Tile()
    !t.letter := l
    !insert (lbag1, t) into Stock

-- J Tiles
    !l := create Letter()
    !l.letter := 'j'
    !insert (door, l) into Spelling
    !t := create Tile()
    !t.letter := l
    !insert (lbag1, t) into Stock

-- K Tiles
    !l := create Letter()
    !l.letter := 'k'
    !insert (door, l) into Spelling
    !t := create Tile()
    !t.letter := l
    !insert (lbag1, t) into Stock

-- L Tiles
    !l := create Letter()
    !l.letter := 'l'
    !insert (door, l) into Spelling
    !t := create Tile()
    !t.letter := l
    !insert (lbag1, t) into Stock

    !l := create Letter()
    !l.letter := 'l'
    !insert (door, l) into Spelling
    !t := create Tile()
    !t.letter := l
    !insert (lbag1, t) into Stock

    !l := create Letter()
    !l.letter := 'l'
    !insert (door, l) into Spelling
    !t := create Tile()
    !t.letter := l
    !insert (lbag1, t) into Stock

    !l := create Letter()
    !l.letter := 'l'
    !insert (door, l) into Spelling
    !t := create Tile()
    !t.letter := l
    !insert (lbag1, t) into Stock

-- M Tiles
    !l := create Letter()
    !l.letter := 'm'
    !insert (door, l) into Spelling
    !t := create Tile()
    !t.letter := l
    !insert (lbag1, t) into Stock

    !l := create Letter()
    !l.letter := 'm'
    !insert (door, l) into Spelling
    !t := create Tile()
    !t.letter := l
    !insert (lbag1, t) into Stock

-- N Tiles
    !l := create Letter()
    !l.letter := 'n'
    !insert (door, l) into Spelling
    !t := create Tile()
    !t.letter := l
    !insert (lbag1, t) into Stock

    !l := create Letter()
    !l.letter := 'n'
    !insert (door, l) into Spelling
    !t := create Tile()
    !t.letter := l
    !insert (lbag1, t) into Stock

    !l := create Letter()
    !l.letter := 'n'
    !insert (door, l) into Spelling
    !t := create Tile()
    !t.letter := l
    !insert (lbag1, t) into Stock

    !l := create Letter()
    !l.letter := 'n'
    !insert (door, l) into Spelling
    !t := create Tile()
    !t.letter := l
    !insert (lbag1, t) into Stock

    !l := create Letter()
    !l.letter := 'n'
    !insert (door, l) into Spelling
    !t := create Tile()
    !t.letter := l
    !insert (lbag1, t) into Stock

    !l := create Letter()
    !l.letter := 'n'
    !insert (door, l) into Spelling
    !t := create Tile()
    !t.letter := l
    !insert (lbag1, t) into Stock

-- O Tiles
    !l := create Letter()
    !l.letter := 'o'
    !insert (door, l) into Spelling
    !t := create Tile()
    !t.letter := l
    !insert (lbag1, t) into Stock

    !l := create Letter()
    !l.letter := 'o'
    !insert (door, l) into Spelling
    !t := create Tile()
    !t.letter := l
    !insert (lbag1, t) into Stock

    !l := create Letter()
    !l.letter := 'o'
    !insert (door, l) into Spelling
    !t := create Tile()
    !t.letter := l
    !insert (lbag1, t) into Stock

    !l := create Letter()
    !l.letter := 'o'
    !insert (door, l) into Spelling
    !t := create Tile()
    !t.letter := l
    !insert (lbag1, t) into Stock

    !l := create Letter()
    !l.letter := 'o'
    !insert (door, l) into Spelling
    !t := create Tile()
    !t.letter := l
    !insert (lbag1, t) into Stock

    !l := create Letter()
    !l.letter := 'o'
    !insert (door, l) into Spelling
    !t := create Tile()
    !t.letter := l
    !insert (lbag1, t) into Stock

    !l := create Letter()
    !l.letter := 'o'
    !insert (door, l) into Spelling
    !t := create Tile()
    !t.letter := l
    !insert (lbag1, t) into Stock

    !l := create Letter()
    !l.letter := 'o'
    !insert (door, l) into Spelling
    !t := create Tile()
    !t.letter := l
    !insert (lbag1, t) into Stock

-- P Tiles
    !l := create Letter()
    !l.letter := 'p'
    !insert (door, l) into Spelling
    !t := create Tile()
    !t.letter := l
    !insert (lbag1, t) into Stock

    !l := create Letter()
    !l.letter := 'p'
    !insert (door, l) into Spelling
    !t := create Tile()
    !t.letter := l
    !insert (lbag1, t) into Stock

-- Q Tiles
    !l := create Letter()
    !l.letter := 'q'
    !insert (door, l) into Spelling
    !t := create Tile()
    !t.letter := l
    !insert (lbag1, t) into Stock

-- R Tiles
    !l := create Letter()
    !l.letter := 'r'
    !insert (door, l) into Spelling
    !t := create Tile()
    !t.letter := l
    !insert (lbag1, t) into Stock

    !l := create Letter()
    !l.letter := 'r'
    !insert (door, l) into Spelling
    !t := create Tile()
    !t.letter := l
    !insert (lbag1, t) into Stock

    !l := create Letter()
    !l.letter := 'r'
    !insert (door, l) into Spelling
    !t := create Tile()
    !t.letter := l
    !insert (lbag1, t) into Stock

    !l := create Letter()
    !l.letter := 'r'
    !insert (door, l) into Spelling
    !t := create Tile()
    !t.letter := l
    !insert (lbag1, t) into Stock

    !l := create Letter()
    !l.letter := 'r'
    !insert (door, l) into Spelling
    !t := create Tile()
    !t.letter := l
    !insert (lbag1, t) into Stock

    !l := create Letter()
    !l.letter := 'r'
    !insert (door, l) into Spelling
    !t := create Tile()
    !t.letter := l
    !insert (lbag1, t) into Stock

-- S Tiles
    !l := create Letter()
    !l.letter := 's'
    !insert (door, l) into Spelling
    !t := create Tile()
    !t.letter := l
    !insert (lbag1, t) into Stock

    !l := create Letter()
    !l.letter := 's'
    !insert (door, l) into Spelling
    !t := create Tile()
    !t.letter := l
    !insert (lbag1, t) into Stock

    !l := create Letter()
    !l.letter := 's'
    !insert (door, l) into Spelling
    !t := create Tile()
    !t.letter := l
    !insert (lbag1, t) into Stock

    !l := create Letter()
    !l.letter := 's'
    !insert (door, l) into Spelling
    !t := create Tile()
    !t.letter := l
    !insert (lbag1, t) into Stock

-- T Tiles
    !l := create Letter()
    !l.letter := 't'
    !insert (door, l) into Spelling
    !t := create Tile()
    !t.letter := l
    !insert (lbag1, t) into Stock

    !l := create Letter()
    !l.letter := 't'
    !insert (door, l) into Spelling
    !t := create Tile()
    !t.letter := l
    !insert (lbag1, t) into Stock

    !l := create Letter()
    !l.letter := 't'
    !insert (door, l) into Spelling
    !t := create Tile()
    !t.letter := l
    !insert (lbag1, t) into Stock

    !l := create Letter()
    !l.letter := 't'
    !insert (door, l) into Spelling
    !t := create Tile()
    !t.letter := l
    !insert (lbag1, t) into Stock

    !l := create Letter()
    !l.letter := 't'
    !insert (door, l) into Spelling
    !t := create Tile()
    !t.letter := l
    !insert (lbag1, t) into Stock

    !l := create Letter()
    !l.letter := 't'
    !insert (door, l) into Spelling
    !t := create Tile()
    !t.letter := l
    !insert (lbag1, t) into Stock

-- U Tiles
    !l := create Letter()
    !l.letter := 'u'
    !insert (door, l) into Spelling
    !t := create Tile()
    !t.letter := l
    !insert (lbag1, t) into Stock

    !l := create Letter()
    !l.letter := 'u'
    !insert (door, l) into Spelling
    !t := create Tile()
    !t.letter := l
    !insert (lbag1, t) into Stock

    !l := create Letter()
    !l.letter := 'u'
    !insert (door, l) into Spelling
    !t := create Tile()
    !t.letter := l
    !insert (lbag1, t) into Stock

    !l := create Letter()
    !l.letter := 'u'
    !insert (door, l) into Spelling
    !t := create Tile()
    !t.letter := l
    !insert (lbag1, t) into Stock

-- V Tiles
    !l := create Letter()
    !l.letter := 'v'
    !insert (door, l) into Spelling
    !t := create Tile()
    !t.letter := l
    !insert (lbag1, t) into Stock

    !l := create Letter()
    !l.letter := 'v'
    !insert (door, l) into Spelling
    !t := create Tile()
    !t.letter := l
    !insert (lbag1, t) into Stock

-- W Tiles
    !l := create Letter()
    !l.letter := 'w'
    !insert (door, l) into Spelling
    !t := create Tile()
    !t.letter := l
    !insert (lbag1, t) into Stock

    !l := create Letter()
    !l.letter := 'w'
    !insert (door, l) into Spelling
    !t := create Tile()
    !t.letter := l
    !insert (lbag1, t) into Stock

-- X Tiles
    !l := create Letter()
    !l.letter := 'x'
    !insert (door, l) into Spelling
    !t := create Tile()
    !t.letter := l
    !insert (lbag1, t) into Stock

-- Y Tiles
    !l := create Letter()
    !l.letter := 'y'
    !insert (door, l) into Spelling
    !t := create Tile()
    !t.letter := l
    !insert (lbag1, t) into Stock

    !l := create Letter()
    !l.letter := 'y'
    !insert (door, l) into Spelling
    !t := create Tile()
    !t.letter := l
    !insert (lbag1, t) into Stock

-- Z Tiles
    !l := create Letter()
    !l.letter := 'z'
    !insert (door, l) into Spelling
    !t := create Tile()
    !t.letter := l
    !insert (lbag1, t) into Stock

!new DateTime('m1Play1Time')
!insert (m1Play1Time, rightNow) into CurrentDate
!matchReq1AddrDate.initialise(2021, 10, 22, 12, 37, 31)

!new Play('play1')
!play1.id := 'm1play1'
!play1.type := #PLAY
!play1.startRow := 8
!play1.startCol := 8
!play1.direction := #VERTICAL
!play1.score := 7
!play1.time := m1Play1Time
!play1.bonusApplied := false
!insert (Rack2,play1) into Played
!insert (match1,play1) into Plays

!new DateTime('m1Play2Time')
!insert (m1Play2Time, rightNow) into CurrentDate
!matchReq1AddrDate.initialise(2021, 10, 22, 12, 37, 39)

!new Play('play2')
!play2.id := 'm1play2'
!play2.type := #PLAY
!play2.startRow := 9
!play2.startCol := 6
!play2.direction := #HORIZONTAL
!play2.score := 13
!play2.time := m1Play2Time
!play2.bonusApplied := false
!insert (Rack1,play2) into Played
!insert (match1,play2) into Plays

!new DateTime('m1Play3Time')
!insert (m1Play3Time, rightNow) into CurrentDate
!matchReq1AddrDate.initialise(2021, 10, 22, 12, 37, 50)

!new Play('play3')
!play3.id := 'm1play3'
!play3.type := #PLAY
!play3.startRow := 12
!play3.startCol := 9
!play3.direction := #HORIZONTAL
!play3.score := 20
!play3.time := m1Play3Time
!play3.bonusApplied := false
!insert (Rack2,play3) into Played
!insert (match1,play3) into Plays

!new DateTime('m1Play4Time')
!insert (m1Play4Time, rightNow) into CurrentDate
!matchReq1AddrDate.initialise(2021, 10, 22, 12, 38, 0)

!new Play('play4')
!play4.id := 'm1play4'
!play4.type := #PLAY
!play4.startRow := 9
!play4.startCol := 7
!play4.direction := #HORIZONTAL
!play4.score := 10
!play4.time := m1Play4Time
!play4.bonusApplied := false
!insert (Rack1,play4) into Played
!insert (match1,play4) into Plays

check
